{
  "name": "aframe-particle-system-component",
  "version": "1.0.6",
  "description": "Particle systems for A-Frame.",
  "main": "index.js",
  "scripts": {
    "build": "browserify examples/main.js -o examples/build.js",
    "dev": "budo examples/main.js:build.js --dir examples --port 8000 --live --open",
    "dist": "webpack index.js dist/aframe-particle-system-component.js && webpack -p index.js dist/aframe-particle-system-component.min.js",
    "lint": "semistandard -v | snazzy",
    "prepublish": "npm run dist",
    "preghpages": "npm run build && shx rm -rf gh-pages && shx mkdir gh-pages && shx cp -r examples/* gh-pages",
    "ghpages": "npm run preghpages && ghpages -p gh-pages",
    "start": "npm run dev",
    "unboil": "node scripts/unboil.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/IdeaSpaceVR/aframe-particle-system-component.git"
  },
  "keywords": [
    "ideaspace",
    "ideaspacevr",
    "webvr",
    "aframe-vr",
    "aframe-component",
    "aframe",
    "mozvr",
    "vr"
  ],
  "author": {
    "name": "IdeaSpace",
    "email": "info@ideaspacevr.org",
    "url": "https://www.ideaspacevr.org"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/IdeaSpaceVR/aframe-particle-system-component/issues"
  },
  "homepage": "https://github.com/IdeaSpaceVR/aframe-particle-system-component#readme",
  "devDependencies": {
    "aframe": "^0.3.2",
    "browserify": "^13.0.0",
    "browserify-css": "^0.9.1",
    "budo": "^8.2.2",
    "randomcolor": "^0.4.4",
    "semistandard": "^8.0.0",
    "shelljs": "^0.7.0",
    "shx": "^0.1.1",
    "snazzy": "^4.0.0",
    "webpack": "^1.13.0"
  },
  "directories": {
    "example": "examples"
  },
  "readme": "# aframe-particle-system-component\n\nCreate particle systems with A-Frame.\n\n![particle-system](https://cloud.githubusercontent.com/assets/674727/19012611/92d694fa-876f-11e6-8b6b-1b93dcd586a8.gif)\n\n[EXAMPLES](http://ideaspacevr.github.io/aframe-particle-system-component/)\n\n### Properties\n\n| Property | Description                                                                               | Default Value |\n| --------- | -----------                                                                               | ------------- |\n| preset | Preset configuration. Possible values are: `default`, `dust`, `snow`, `rain`.                | `default`        |\n| maxAge | The particle's maximum age in seconds.                                                       | `6`        |\n| positionSpread | Describes this emitter's position variance on a per-particle basis.                  | `0 0 0`        |\n| type   | The default distribution this emitter should use to control its particle's spawn position and force behaviour. Possible values are `1` (box), `2` (sphere), `3` (disc) | 1 (box)       |\n| rotationAxis | Describes this emitter's axis of rotation. Possible values are `x`, `y` and `z`.       | `x`        |\n| rotationAngle | The angle of rotation, given in radians. `Dust` preset is `3.14`.                     | `0`        |\n| accelerationValue | Describes this emitter's base acceleration.                                       | `0, -10, 0`  |\n| accelerationSpread | Describes this emitter's acceleration variance on a per-particle basis.          | `10 0 10`  |\n| velocityValue | Describes this emitter's base velocity.                                               | `0 25 0`   |\n| velocitySpread | Describes this emitter's acceleration variance on a per-particle basis.              | `10 7.5 10` |\n| color | Describes a particle's color. This property is a \"value-over-lifetime\" property, meaning an array of values can be given to describe specific value changes over a particle's lifetime.                                                     | `#0000FF,#FF0000` |\n| size | Describes a particle's size.                                                      | `1`    |\n| direction | The direction of the emitter. If value is `1`, emitter will start at beginning of particle's lifecycle. If value is `-1`, emitter will start at end of particle's lifecycle and work it's way backwards.                                                     | `1`        |\n| duration | The duration in seconds that this emitter should live for. If not specified, the emitter will emit particles indefinitely.   | `null`         |\n| particleCount | The total number of particles this emitter will hold. NOTE: this is not the number of particles emitted in a second, or anything like that. The number of particles emitted per-second is calculated by particleCount / maxAge (approximately!)                  | `1000`        |\n| texture | The texture used by this emitter.                                              | `./images/star2.png`        |\n| randomize | When a particle is re-spawned, whether it's position should be re-randomised or not. Can incur a performance hit. | `false`         |\n| opacity | Either a single number to describe the opacity of a particle. | `1` |\n| maxParticleCount   |                                                      | `250000`        |\n\nI am just exposing a subset of all API parameters through this component. See http://squarefeet.github.io/ShaderParticleEngine/docs/api/ for a complete API description.\n\n### Usage Examples\n\n```html\n<a-entity position=\"0 2.25 -15\" particle-system=\"preset: dust\"></a-entity>\n```\n```html\n<a-entity position=\"0 2.25 -15\" particle-system=\"preset: snow\"></a-entity>\n```\n```html\n<a-entity position=\"0 2.25 -15\" particle-system=\"preset: rain\"></a-entity>\n```\n\n```html\n<a-entity position=\"0 2.25 -15\" particle-system=\"preset: dust; texture: ./images/star2.png; color: #0000FF,#00FF00,#FF0000\"></a-entity>\n```\n\n\n### Browser Installation\n\nInstall and use by directly including the [browser files](dist). Make sure the images directory (particle textures) is in the same\ndirectory as the component.\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>A-Frame Particle System Component Example</title>\n    <meta name=\"description\" content=\"Hello, World!\">\n    <script src=\"./aframe.min.js\"></script>\n    <script src=\"./aframe-particle-system-component.js\"></script>\n  </head>\n  <body>\n    <a-scene>\n\n      <!-- particle system uses 'default' preset, setting custom colors //-->\n      <a-entity position=\"0 2.25 -15\" particle-system=\"color: #EF0000,#44CC00\"></a-entity>\n\n      <a-sphere position=\"0 1.25 -1\" radius=\"1.25\" color=\"#EF2D5E\"></a-sphere>\n      <a-box position=\"-1 0.5 1\" rotation=\"0 45 0\" width=\"1\" height=\"1\" depth=\"1\"  color=\"#4CC3D9\"></a-box>\n      <a-cylinder position=\"1 0.75 1\" radius=\"0.5\" height=\"1.5\" color=\"#FFC65D\"></a-cylinder>\n      <a-plane rotation=\"-90 0 0\" width=\"4\" height=\"4\" color=\"#7BC8A4\"></a-plane>\n\n      <a-sky color=\"#000000\"></a-sky>\n\n    </a-scene>\n  </body>\n</html>\n```\n\n### npm\n\nhttps://www.npmjs.com/package/aframe-particle-system-component\n\n### Local Development\n\n```\nnpm install\nnpm run dev\n```\n\n### Credits\n\nBased on the ShaderParticleEngine by Squarefeet: https://github.com/squarefeet/ShaderParticleEngine\n",
  "readmeFilename": "README.md",
  "_id": "aframe-particle-system-component@1.0.6",
  "dist": {
    "shasum": "4934e0767761939cd42b522f80b853f0a01b43b3"
  },
  "_from": "aframe-particle-system-component@",
  "_resolved": "https://registry.npmjs.org/aframe-particle-system-component/-/aframe-particle-system-component-1.0.6.tgz"
}
